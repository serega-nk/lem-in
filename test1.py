data = """
1 ( 24)
2 ( 24 34)
3 ( 33 34 30)
4 ( 33 34 43 32)
5 ( 33 34 43 32 45)
6 ( 33 40 43 32 45 41)
7 ( 33 40 43 32 45 41 48)
8 ( 33 40 43 32 45 41 48 50)
9 ( 33 62 43 32 45 41 48 50 49)
10 ( 33 62 43 32 50 41 48 50 49 77)
11 ( 33 62 43 32 50 41 48 50 49 77 85)
12 ( 33 62 43 32 50 41 48 50 49 77 85 86)
13 ( 33 62 43 32 50 41 48 50 49 77 85 86 90)
14 ( 33 62 43 32 50 41 49 50 49 77 85 86 90 89)
15 ( 33 62 43 32 50 41 49 50 49 77 85 86 90 89 92)
16 ( 33 62 43 32 50 41 49 50 49 77 85 86 90 89 92 95)
17 ( 33 62 43 32 50 41 49 65 49 77 85 86 90 89 92 95 85)
18 ( 33 82 43 32 50 41 49 65 49 77 85 86 90 89 92 95 85 81)
19 ( 33 82 43 32 50 41 49 85 49 77 85 86 90 89 92 95 85 81 84)
20 ( 33 82 43 32 50 41 49 85 49 77 85 86 90 89 111 95 85 81 84 101)
21 ( 33 82 43 32 50 41 49 85 49 77 85 102 90 89 111 95 85 81 84 101 112)
22 ( 33 82 43 32 50 41 49 85 49 98 85 102 90 89 111 95 85 81 84 101 112 109)
23 ( 33 82 43 32 50 41 49 85 49 98 85 102 90 113 111 95 85 81 84 101 112 109 115)
24 ( 33 82 43 32 94 41 49 85 49 98 85 102 90 113 111 95 85 81 84 101 112 109 115 99)
25 ( 33 82 43 32 94 41 77 85 49 98 85 102 90 113 111 95 85 81 84 101 112 109 115 99 115)
26 ( 33 82 43 32 94 41 77 85 49 98 85 102 90 113 111 95 85 81 84 101 112 136 115 99 115 125)
27 ( 33 82 43 32 94 41 77 85 49 98 85 102 90 113 111 95 85 81 84 101 112 136 115 99 115 125 152)
28 ( 33 82 43 32 94 41 77 85 49 98 85 102 90 113 111 95 85 81 84 101 112 136 115 99 115 125 152 159)
29 ( 33 82 43 32 94 41 77 85 49 98 85 102 90 113 111 95 85 81 84 101 112 136 115 99 115 125 152 159 161)
30 ( 33 82 43 32 94 41 77 85 49 98 85 102 90 113 111 95 85 81 84 101 112 136 115 136 115 125 152 159 161 131)
31 ( 33 82 43 32 94 41 77 85 49 98 85 102 90 113 111 95 85 81 84 101 112 136 115 136 115 170 152 159 161 131 128)
"""


data = """
1 ( 24)
2 ( 24 34)
3 ( 30 33 34)
4 ( 30 33 34 45)
5 ( 32 33 34 43 45)
6 ( 32 33 40 41 43 45)
7 ( 32 33 40 41 43 45 48)
8 ( 32 33 40 41 43 45 48 50)
9 ( 32 33 41 43 45 48 49 50 62)
10 ( 32 33 41 43 45 48 49 50 62 79)
11 ( 32 33 41 43 48 49 50 50 62 77 79)
12 ( 32 33 41 43 48 49 50 50 62 77 79 85)
13 ( 32 33 41 43 48 49 50 50 62 77 79 85 88)
14 ( 32 33 41 43 48 49 50 50 62 77 79 85 88 90)
15 ( 32 33 41 43 48 49 50 50 62 77 79 85 88 90 95)
16 ( 32 33 41 43 48 49 50 50 62 77 79 85 88 90 95 98)
17 ( 32 33 41 43 48 49 50 62 69 77 79 84 85 88 90 95 98)
18 ( 32 33 41 43 48 49 50 62 69 77 79 84 85 88 90 95 98 101)
19 ( 32 33 41 43 48 49 50 69 77 79 81 82 84 85 88 90 95 98 101)
20 ( 32 33 41 43 48 49 50 69 77 79 81 82 84 85 88 90 95 98 101 102)
21 ( 32 33 41 43 48 49 50 69 77 79 81 82 84 85 88 90 95 98 101 102 111)
22 ( 32 33 41 43 48 49 50 69 77 79 81 82 84 85 85 88 90 95 98 101 102 111)
23 ( 32 33 41 43 48 49 50 69 77 79 81 82 84 85 85 88 90 95 98 101 102 111 112)
24 ( 32 33 41 43 48 49 50 69 77 79 81 82 84 85 85 88 90 95 98 101 102 111 112 113)
25 ( 32 33 41 43 48 49 50 69 77 79 81 82 84 85 85 88 90 95 98 101 102 111 112 113 121)
26 ( 32 33 41 43 48 49 50 69 77 79 81 82 84 85 85 88 90 95 98 101 102 111 112 113 121 122)
27 ( 32 33 41 43 48 49 50 69 79 81 82 84 85 85 88 90 95 98 98 101 102 109 111 112 113 121 122)
28 ( 32 33 41 43 49 50 69 79 81 82 84 85 85 88 90 95 98 98 101 102 109 111 112 113 114 115 121 122)
29 ( 32 33 41 43 49 50 69 79 81 82 84 85 85 88 90 95 98 98 101 102 109 111 112 113 114 115 121 122 132)
30 ( 32 33 41 43 49 50 69 79 81 82 84 85 85 88 90 95 98 98 101 102 109 111 112 113 114 115 121 122 132 135)
31 ( 32 33 33 41 43 49 50 79 81 82 85 85 85 88 90 95 98 98 101 102 109 111 112 113 114 115 121 122 127 132 135)
32 ( 32 33 33 41 43 49 50 79 81 82 85 85 85 88 90 95 98 98 101 102 111 112 113 114 115 118 121 122 127 132 132 135)
33 ( 32 33 33 41 43 49 79 81 82 85 85 85 88 90 94 95 98 98 99 101 102 111 112 113 114 115 118 121 122 127 132 132 135)
34 ( 32 33 33 41 43 49 79 81 82 85 85 85 88 90 94 95 98 98 99 101 102 111 112 113 114 115 118 121 122 127 132 132 135 146)
35 ( 32 33 33 41 43 49 79 81 82 85 85 85 88 90 94 95 98 98 99 101 102 111 112 113 114 115 118 121 122 127 132 132 135 146 152)
36 ( 32 33 33 41 43 49 79 81 82 85 85 85 88 90 94 95 98 98 99 101 102 111 112 113 114 115 118 121 122 127 132 135 136 146 148 152)
37 ( 32 33 33 41 43 49 79 81 82 85 85 85 88 90 94 95 98 98 99 101 102 111 112 113 114 115 118 121 122 127 132 135 136 146 148 152 153)
38 ( 32 33 33 41 43 49 79 81 82 85 85 85 88 90 94 95 98 98 99 101 102 111 112 113 114 115 118 121 122 127 132 135 136 146 148 152 153 159)
39 ( 32 33 33 41 43 49 79 81 82 85 85 85 88 90 94 95 98 98 99 101 102 111 112 113 114 115 118 121 122 127 132 135 136 145 146 148 152 153 159)
40 ( 32 33 33 41 43 49 79 81 82 85 85 85 88 90 94 95 98 98 99 101 102 111 112 113 114 115 118 121 122 127 132 135 136 145 146 148 152 153 159 161)
41 ( 32 33 33 41 43 49 79 81 82 85 85 85 88 90 94 95 98 98 99 101 102 111 112 113 114 115 118 121 122 127 132 135 136 145 146 148 152 153 159 161 167)
42 ( 32 33 33 41 43 49 79 81 82 85 85 85 88 90 94 95 98 98 101 102 111 112 113 114 115 118 121 122 127 131 132 135 136 136 145 146 148 152 153 159 161 167)
43 ( 32 33 33 41 43 49 79 81 82 85 85 85 88 90 94 95 98 98 101 102 111 112 113 114 115 118 121 122 127 131 132 135 136 136 145 146 151 152 153 159 161 167 170)
44 ( 32 33 33 41 43 49 79 81 82 85 85 85 88 90 94 95 98 98 101 102 111 112 113 114 115 118 121 122 127 131 132 135 136 136 145 146 151 152 153 159 161 167 170 198)
"""

data = """
1 ( 10)
2 ( 10 16)
3 ( 10 20 32)
4 ( 10 20 32 43)
5 ( 10 20 32 43 45)
6 ( 10 20 32 43 45 50)
7 ( 10 20 32 43 45 50 55)
8 ( 20 29 32 36 43 45 50 55)
9 ( 20 29 32 36 43 45 50 55 56)
10 ( 20 29 32 36 43 45 50 55 58 61)
11 ( 20 29 32 36 43 45 50 55 58 61 64)
12 ( 20 29 32 36 43 45 50 58 61 63 64 69)
13 ( 20 29 32 36 43 45 50 58 62 63 64 69 80)
14 ( 20 29 32 43 43 45 50 58 62 63 64 69 75 80)
15 ( 20 29 32 43 43 45 50 58 62 63 64 69 75 80 83)
16 ( 20 29 32 43 45 50 52 58 62 63 64 69 75 77 80 83)
17 ( 20 29 32 43 45 50 52 58 62 63 64 69 75 77 80 83 86)
18 ( 20 29 32 43 45 50 52 60 62 63 64 69 75 77 80 83 86 86)
19 ( 20 29 32 43 45 52 55 60 62 63 64 69 75 77 80 83 85 86 86)
20 ( 20 29 32 43 45 52 55 60 62 63 64 69 75 77 80 83 85 86 88 93)
21 ( 29 32 43 45 52 55 55 60 60 62 63 64 69 75 77 80 83 85 86 88 93)
22 ( 29 32 43 45 52 55 55 60 60 62 63 64 69 77 80 83 85 86 87 88 89 93)
23 ( 29 32 43 45 52 55 55 60 60 62 64 69 76 77 80 83 85 86 87 88 89 90 93)
24 ( 29 32 43 45 52 55 55 60 60 62 64 69 76 77 80 83 85 86 87 88 89 90 93 106)
25 ( 29 32 43 45 52 55 55 60 60 62 69 76 77 80 80 83 85 86 87 88 89 90 93 93 106)
26 ( 29 32 43 45 52 55 55 60 60 62 69 76 77 80 80 83 85 86 87 88 89 90 93 93 106 110)
27 ( 29 32 43 45 52 55 55 60 60 62 69 76 77 80 80 83 86 87 88 89 90 93 93 96 99 106 110)
28 ( 29 32 43 45 52 55 55 60 60 62 69 76 77 80 80 83 86 87 88 89 90 93 93 96 99 106 110 110)
29 ( 29 32 43 45 52 55 55 60 60 69 76 77 80 80 83 83 86 87 88 89 90 93 93 96 98 99 106 110 110)
30 ( 29 32 43 45 52 55 55 60 60 69 76 77 80 80 83 83 86 87 88 89 90 93 93 96 98 99 106 110 110 120)
31 ( 29 32 43 45 52 55 55 60 60 69 76 77 80 80 83 83 86 87 88 89 90 93 93 96 98 99 106 110 110 120 123)
32 ( 29 32 43 45 52 55 55 60 60 69 76 77 80 80 83 83 86 87 88 89 90 93 93 96 98 99 106 110 110 120 123 126)
33 ( 29 32 43 45 52 55 55 60 60 69 76 77 80 80 83 83 86 87 88 89 90 93 93 96 98 99 106 110 110 120 123 126 129)
34 ( 29 32 43 45 52 55 55 60 60 69 76 77 80 80 83 83 86 87 88 89 90 93 93 98 99 106 110 110 113 120 123 126 129 130)
35 ( 29 32 43 45 52 55 55 60 60 69 76 77 80 80 83 83 86 87 88 89 90 93 93 98 99 106 110 110 113 120 123 126 129 130 149)
36 ( 29 32 43 45 52 55 55 60 60 69 76 77 80 80 83 83 86 87 89 90 93 93 98 99 106 110 110 113 117 120 121 123 126 129 130 149)
37 ( 29 32 43 45 52 55 55 60 60 62 69 76 77 80 80 83 83 86 87 89 90 93 93 98 99 106 110 110 117 120 120 121 123 126 126 129 149)
38 ( 29 32 43 45 52 55 55 60 60 62 69 76 77 80 80 83 83 86 87 89 90 93 93 98 99 106 110 110 117 120 120 121 123 126 126 129 149 155)
39 ( 29 32 43 45 52 55 55 60 60 62 69 76 77 80 80 83 83 86 87 89 90 93 93 98 99 106 110 110 117 120 120 121 123 126 126 129 149 155 163)
40 ( 29 32 43 45 52 55 55 60 60 62 69 76 77 80 80 83 83 86 87 89 90 93 93 98 99 106 110 110 117 120 120 121 123 126 126 129 149 155 163 165)
41 ( 29 32 43 45 52 55 55 60 60 62 69 76 77 80 80 83 86 87 89 90 93 93 98 99 106 110 110 113 117 120 120 121 123 126 126 129 139 149 155 163 165)
42 ( 29 32 43 45 52 55 55 60 60 62 69 76 77 80 80 83 86 87 89 90 93 93 98 99 106 110 110 113 117 120 120 121 123 126 126 129 139 149 155 163 165 172)
43 ( 29 32 43 45 52 55 55 60 60 62 69 76 77 80 80 83 86 87 89 90 93 93 98 99 106 110 110 113 117 120 120 121 123 126 126 129 139 149 155 163 165 172 176)
44 ( 29 32 43 45 52 55 55 60 60 62 69 76 77 80 80 83 86 87 89 90 93 93 98 99 106 110 110 113 120 120 121 122 123 126 126 129 139 149 155 163 165 171 172 176)
45 ( 29 32 43 45 52 55 55 60 60 62 69 76 77 80 80 83 86 87 89 90 93 93 98 99 106 110 110 113 120 120 121 122 123 126 126 129 139 149 155 163 165 171 172 176 181)
46 ( 29 32 43 45 52 55 60 60 62 69 76 77 80 80 83 86 87 89 90 93 93 96 98 99 106 110 110 113 120 120 121 122 123 126 126 129 139 149 155 157 163 165 171 172 176 181)
47 ( 29 32 43 45 52 55 60 60 62 69 76 77 80 80 83 86 87 89 90 93 93 96 98 99 106 110 110 113 120 120 121 122 123 126 126 129 139 149 155 161 163 165 171 172 176 181 204)
"""


data = """
1 ( 20)
2 ( 39 29)
3 ( 39 29 50)
4 ( 39 29 59 52)
5 ( 39 29 59 52 63)
6 ( 39 29 59 52 63 74)
7 ( 39 29 59 72 63 74 57)
8 ( 39 29 59 72 63 74 57 84)
9 ( 39 29 72 72 63 74 57 84 77)
10 ( 39 29 72 84 63 74 57 84 77 85)
11 ( 39 29 77 84 63 74 57 84 77 85 98)
12 ( 39 29 77 84 63 74 57 84 77 85 98 109)
13 ( 39 29 77 84 63 74 57 84 77 85 98 109 111)
14 ( 39 29 77 84 63 74 57 84 77 85 98 109 111 133)
15 ( 39 29 77 84 63 74 57 84 77 112 98 109 111 133 110)
16 ( 39 29 77 84 63 74 57 84 77 112 98 109 111 133 110 163)
17 ( 39 29 77 84 63 74 57 84 77 112 98 109 111 133 110 163 166)
18 ( 39 29 77 84 63 74 57 84 77 112 98 109 111 133 110 163 166 191)
"""
number = 360
number = 336
number = 132

test = []
for line in data.strip().split('\n'):
    _, line = line.strip(')').split(' ( ')
    routes = list(sorted(map(lambda x: int(x) - 1, line.split(' '))))
    test.append(routes)

#test = test[7:12]
for routes in test:
    #print(len(routes), routes)
    count = number
    value = 0
    while (count > 0):
        count -= 1
        routes[0] += 1
        value = max(value, routes[0])
        routes = sorted(routes)
    print(len(routes), value)
    #print(len(routes), routes)
